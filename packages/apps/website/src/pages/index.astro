---
import { Icon } from "@astrojs/starlight/components";
import StarlightPage from "@astrojs/starlight/components/StarlightPage.astro";
import "@fontsource-variable/petrona";
import "@fontsource-variable/petrona/wght-italic.css";
import { Image } from "astro:assets";
import { LinkButton } from "starlight-theme-nova/components";
import logo from "../assets/logo.svg";
---

<script>
  function getVisibleHeightInViewport(element: HTMLElement): number {
    const elementRectangle = element.getBoundingClientRect();
    const viewportTop = 0;
    const viewportBottom =
      window.innerHeight || document.documentElement.clientHeight;
    const intersectionTop = Math.max(elementRectangle.top, viewportTop);
    const intersectionBottom = Math.min(
      elementRectangle.bottom,
      viewportBottom,
    );
    return Math.max(0, intersectionBottom - intersectionTop);
  }

  function getMostVisibleStepIndex(): number {
    let mostVisibleIndex = -1;
    let mostVisibleHeight = -1;
    for (let index = 0; index < steps.length; index++) {
      const visibleHeight = getVisibleHeightInViewport(steps[index]!);
      if (visibleHeight > mostVisibleHeight) {
        mostVisibleHeight = visibleHeight;
        mostVisibleIndex = index;
      }
    }
    return mostVisibleIndex;
  }

  function scrollToElement(element: HTMLElement): void {
    const targetTop = window.pageYOffset + element.getBoundingClientRect().top;
    window.scrollTo({ top: targetTop, behavior: "smooth" });
  }

  function scrollToNextStep(): void {
    const mostVisibleIndex = getMostVisibleStepIndex();
    if (mostVisibleIndex === -1) {
      const firstBelow = steps.find(
        (step) => step.getBoundingClientRect().top > 0,
      );
      if (firstBelow) scrollToElement(firstBelow);
      return;
    }
    const nextStep = steps[mostVisibleIndex + 1];
    if (nextStep) {
      scrollToElement(nextStep);
    }
  }

  const steps = Array.from(document.querySelectorAll<HTMLElement>(".step"));
  const scrollDownButton = document.getElementById(
    "scroll-down-button",
  ) as HTMLButtonElement;
  const tosPpLink = document.getElementById("tos-pp")!;
  const hero = document.querySelector(".hero")!;
  const header = document.querySelector(
    ".nova-page-frame-header",
  ) as HTMLElement;

  scrollDownButton.addEventListener("click", scrollToNextStep);

  new IntersectionObserver(
    (entries) => {
      const { isIntersecting: isLastStep } = entries.toSorted(
        (a, b) => a.time - b.time,
      )[0]!;
      header.style.display = isLastStep ? "block" : "none";
      scrollDownButton.style.display = isLastStep ? "none" : "inline-block";
      tosPpLink.style.display = isLastStep ? "inline-block" : "none";
    },
    { threshold: 0.01 },
  ).observe(hero);
</script>
<style is:global>
  body {
    background-color: var(--sl-color-bg);
    color: var(--sl-color-text);
    transition:
      background-color 150ms ease,
      color 150ms ease;
  }

  /* Start with the header being hidden. */
  .nova-page-frame-header {
    display: none;
  }

  /* The main-frame has a padding at the top which we want to remove. */
  .main-frame {
    padding: 0;
  }

  /* Remove width restriction set by the template. */
  .main-frame .sl-container {
    margin: 0;
    width: 100%;
    max-width: 100%;
  }

  /* Hide the title. */
  .main-frame .main-pane main > .content-panel:first-child {
    display: none;
  }

  /* Center the content. */
  .main-frame .main-pane main > .content-panel {
    border: 0;
    padding: 0;
    width: 100%;
  }

  /* Hide the footer */
  .main-frame footer {
    display: none;
  }
</style>

<style>
  .highlighted {
    --highlight-color: #38d9a9;
    margin-inline-start: -0.2em;
    margin-inline-end: -0.2em;
    padding-inline-start: 0.2em;
    padding-inline-end: 0.2em;
    border-radius: 0.8em 0.3em;
    background: transparent;
    background-image: linear-gradient(
      to right,
      color-mix(in srgb, var(--highlight-color) 30%, transparent),
      color-mix(in srgb, var(--highlight-color) 90%, transparent),
      color-mix(in srgb, var(--highlight-color) 60%, transparent)
    );
    box-decoration-break: clone;
    font-weight: 600;
  }

  .balanced {
    text-wrap: balance;
  }

  .step {
    display: flex;
    flex-direction: column;
    justify-content: center;
    min-height: 100svh;
    margin: 0;
    padding-block-start: 2rem;
    padding-inline: max(calc(50% - 600px), 1rem);
    font-family: "Petrona Variable", serif;
  }
  .step.big {
    display: flex;
    flex-direction: column;
    justify-content: center;
  }
  .step.step.big h2 {
    font-size: 6.9rem;
    font-weight: normal;
  }
  .step h2 {
    margin-block-end: 2rem;
    font-size: 4rem;
  }
  .step h4 {
    margin-block-end: 2rem;
    font-size: 1.3rem;
  }
  .step p {
    margin-block-end: 1rem;
    font-size: 3rem;
  }
  @media (max-width: 1200px) {
    .step.step.big h2 {
      font-size: 6rem;
    }
    .step h2 {
      font-size: 4rem;
    }
    .step p {
      font-size: 3rem;
    }
  }
  @media (max-width: 1000px) {
    .step.step.big h2 {
      font-size: 5rem;
    }
    .step h2 {
      font-size: 3.5rem;
    }
    .step p {
      font-size: 2.5rem;
    }
  }
  @media (max-width: 800px) {
    .step.step.big h2 {
      font-size: 4rem;
      font-weight: bold;
    }
    .step h2 {
      font-size: 3rem;
    }
    .step p {
      font-size: 2.2rem;
    }
  }
  @media (max-width: 600px) {
    .step.step.big h2 {
      font-size: 3rem;
      font-weight: bold;
    }
    .step h2 {
      font-size: 2.5rem;
    }
    .step p {
      font-size: 2rem;
    }
  }

  .hero {
    justify-self: start;
    padding-inline: max(calc(50% - 560px), 1rem);
    margin-block: 3rem;
    font-family: sans-serif;
  }
  .hero img {
    width: 15rem;
    margin-block-end: 2rem;
  }
  @media (max-width: 600px) {
    .hero img {
      width: 12rem;
      margin-block-end: 2rem;
    }
  }
  .hero .copy {
    display: flex;
    flex-direction: column;
    width: 100%;
    justify-content: center;
    align-items: center;
    margin-block-end: 2rem;
  }
  .hero .copy h1 {
    font-size: 4rem;
    font-weight: normal;
    margin: 0;
  }
  .hero .copy p {
    font-size: 2rem;
    font-weight: normal;
  }
  .hero .actions {
    width: 100%;
    display: flex;
    gap: 0.5rem;
    justify-content: center;
    margin-block-end: 4rem;
  }
  .hero .actions a {
    display: inline-block;
    width: 128px;
    margin: 0;
    box-sizing: content-box;
    display: flex;
    justify-content: center;
    align-items: center;
  }

  #scroll-down-button {
    width: 3rem;
    height: 3rem;
    position: fixed;
    bottom: 1rem;
    left: calc(50% - 1rem);
    background-color: transparent;
    color: var(--sl-color-text);
    display: flex;
    justify-content: center;
    align-items: center;
    font-size: 3rem;
    cursor: pointer;
    border: 0;
    border-radius: 100%;
    transition:
      background-color 150ms ease,
      color 150ms ease;
    outline: none;
  }
  #scroll-down-button:hover {
    background-color: color-mix(in srgb, var(--sl-color-text) 10%, transparent);
  }
  #scroll-down-button:focus-visible {
    box-shadow: 0 0 0 2px var(--sl-color-orange);
    outline-offset: 2px;
  }
  #scroll-down-button[disabled] {
    cursor: auto;
  }

  #tos-pp {
    width: 100%;
    padding-inline: 1rem;
    text-align: right;
  }
  #tos-pp a {
    color: var(--sl-color-text);
    font-size: 0.6rem;
  }
</style>

<StarlightPage frontmatter={{ title: "Superego", template: "splash" }}>
  <div class="step big">
    <h2>
      Imagine this:
      <div style={{ display: "block", height: "2rem", width: "100%" }}></div>
      <em class="highlighted">all</em> your personal data,
      <br />
      in <em class="highlighted">one</em> private space.
    </h2>
  </div>

  <div class="step">
    <h2>A local, encrypted, open-source database.</h2>
    <p>
      A vault you can <em class="highlighted">trust</em> with your most private records.
    </p>
  </div>

  <div class="step">
    <h2>Pulling data from your other apps,</h2>
    <p class="balanced">
      giving you back what's
      <em class="highlighted">rightfully yours</em>.
    </p>
  </div>

  <div class="step big">
    <h2 class="balanced">
      Then: connect it to an <span class="highlighted">AI</span>.
    </h2>
  </div>

  <div class="step">
    <h2 class="balanced">
      Finally! An assistant that <em class="highlighted">actually</em> knows you.
    </h2>
    <p>
      Did you know you run faster <em>on Thursdays</em>? Or that last year you
      spent <em>632 euros</em> on shoes?
    </p>
  </div>

  <div class="step">
    <h2>Share your day with it.</h2>
    <p>
      It'll update its “memory” and get to know you
      <em class="highlighted">even better</em>.
    </p>
  </div>

  <div class="step big">
    <h2>Top it off: make it <em class="highlighted">hackable</em>.</h2>
  </div>

  <div class="step">
    <h2>Sorry, <em>“vibe-able”</em>.</h2>
    <p>
      That niche app idea no one would ever make?
      <br />
      <em class="highlighted">Just ask</em> the AI!
    </p>
  </div>

  <div class="step big">
    <h2>But why <em class="highlighted">just</em> imagine?</h2>
  </div>

  <div class="step">
    <div class="hero">
      <div class="copy">
        <Image
          alt="Superego logo: a low-poly drawing of Freud's head"
          src={logo}
        />
        <h1>Superego</h1>
        <p>Your Life's Database</p>
      </div>
      <div class="actions">
        <LinkButton href="https://demo.superego.dev" icon="rocket">
          Try the demo
        </LinkButton>
        <LinkButton
          href="https://github.com/superegodev/superego/releases/latest"
          icon="download"
        >
          Get the alpha
        </LinkButton>
      </div>
    </div>
    <h4>Or, watch a short demo:</h4>
    <iframe
      src={import.meta.env["PUBLIC_DEMO_VIDEO_URL"]}
      title="Superego Demo Video"
      style={{
        width: "100%",
        aspectRatio: "720/405",
        border: 0,
        borderRadius: "0.5rem",
      }}
      allow="accelerometer; autoplay; clipboard-write; encrypted-media; gyroscope; picture-in-picture; web-share"
      referrerpolicy="strict-origin-when-cross-origin"
      allowfullscreen
    >
    </iframe>
  </div>

  <button id="scroll-down-button" type="button" aria-label="Scroll down">
    <Icon name="down-caret" aria-hidden="true" />
  </button>

  <div id="tos-pp">
    <a href="/tos-pp">Demo TOS and Privacy Policy</a>
  </div>
</StarlightPage>
