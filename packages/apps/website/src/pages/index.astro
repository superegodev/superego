---
import StarlightPage from "@astrojs/starlight/components/StarlightPage.astro";
import { LinkButton } from "starlight-theme-nova/components";
import { Icon } from "@astrojs/starlight/components";
import { Image } from "astro:assets";
import image0 from "../assets/landing-page/0.png";
import image1 from "../assets/landing-page/1.png";
import image2 from "../assets/landing-page/2.png";
import logo from "../assets/logo.svg";

const CONTAINER_WIDTH = 720;
---

<script>
  function getVisibleHeightInViewport(element: HTMLElement): number {
    const elementRectangle = element.getBoundingClientRect();
    const viewportTop = 0;
    const viewportBottom =
      window.innerHeight || document.documentElement.clientHeight;
    const intersectionTop = Math.max(elementRectangle.top, viewportTop);
    const intersectionBottom = Math.min(
      elementRectangle.bottom,
      viewportBottom,
    );
    return Math.max(0, intersectionBottom - intersectionTop);
  }

  function getMostVisibleStepIndex(): number {
    let mostVisibleIndex = -1;
    let mostVisibleHeight = -1;
    for (let index = 0; index < steps.length; index++) {
      const visibleHeight = getVisibleHeightInViewport(steps[index]!);
      if (visibleHeight > mostVisibleHeight) {
        mostVisibleHeight = visibleHeight;
        mostVisibleIndex = index;
      }
    }
    return mostVisibleIndex;
  }

  function scrollToElement(element: HTMLElement): void {
    const targetTop = window.pageYOffset + element.getBoundingClientRect().top;
    window.scrollTo({ top: targetTop, behavior: "smooth" });
  }

  function scrollToNextStep(): void {
    const mostVisibleIndex = getMostVisibleStepIndex();
    if (mostVisibleIndex === -1) {
      const firstBelow = steps.find(
        (step) => step.getBoundingClientRect().top > 0,
      );
      if (firstBelow) scrollToElement(firstBelow);
      return;
    }
    const nextStep = steps[mostVisibleIndex + 1];
    if (nextStep) {
      scrollToElement(nextStep);
    }
  }

  const steps = Array.from(document.querySelectorAll<HTMLElement>(".step"));
  const scrollDownButton = document.getElementById("scroll-down-button")!;
  const hero = document.querySelector(".hero")!;
  const header = document.querySelector(
    ".nova-page-frame-header",
  ) as HTMLElement;

  scrollDownButton.addEventListener("click", scrollToNextStep);

  new IntersectionObserver(
    (entries) => {
      const latestEntry = entries.toSorted((a, b) => a.time - b.time)[0]!;
      header!.style.opacity = String(latestEntry.isIntersecting ? 1 : 0);
      scrollDownButton!.style.opacity = String(
        latestEntry.isIntersecting ? 0 : 1,
      );
    },
    { threshold: 0.01 },
  ).observe(hero);
</script>
<style is:global>
  /* Hide the header until we're scrolled to the bottom. */
  .nova-page-frame-header {
    opacity: 0;
    transition: opacity 200ms ease;
  }

  /* The main-frame has a padding at the top which we want to remove. */
  .main-frame {
    padding: 0;
  }

  /* Hide the title. */
  .main-frame .main-pane main > .content-panel:first-child {
    display: none;
  }

  /* Center the content. */
  .main-frame .main-pane main > .content-panel {
    border: 0;
    padding: 0;
    padding-inline: max(calc(50% - 360px), 1rem);
    width: 100%;
  }

  /* Hide the footer */
  .main-frame footer {
    display: none;
  }
</style>

<style>
  .step {
    min-height: 100vh;
    margin: 0;
    padding-block-start: 4rem;
  }
  .step h2 {
    font-size: 1.6rem;
  }
  .step .details {
    margin-block-start: 2rem;
    font-size: 1.4rem;
  }
  .step .details img {
    margin-block-start: 4rem;
    width: 100%;
    padding: 2rem;
    background: #fff;
    box-shadow:
      0 1px 2px rgba(0, 0, 0, 0.16),
      0 4px 8px rgba(0, 0, 0, 0.18);
    border: 1px solid rgba(0, 0, 0, 0.14);
    border-radius: 8px;
  }
  #scroll-down-button {
    width: 3rem;
    height: 3rem;
    position: fixed;
    bottom: 1rem;
    left: calc(50% - 1rem);
    background-color: transparent;
    color: #111827;
    display: flex;
    justify-content: center;
    align-items: center;
    font-size: 3rem;
    cursor: pointer;
    border: 0;
    border-radius: 100%;
  }
  #scroll-down-button:hover {
    background-color: #f5f5f5;
  }

  /* Hero */
  .hero {
    display: flex;
    flex-direction: column;
    width: 100%;
    justify-content: center;
    align-items: center;
    padding: 0;
    margin-block-start: 5rem;
  }
  .hero img {
    width: 10rem;
    margin-block-end: 2rem;
  }
  .hero .copy {
    display: flex;
    flex-direction: column;
    width: 100%;
    justify-content: center;
    align-items: center;
    margin-block-end: 1rem;
  }
  .hero .copy h1 {
    font-size: 2.5rem;
    margin: 0;
  }
  .hero .copy p {
    font-size: 1.2rem;
  }
  .hero .actions {
    width: 100%;
    display: flex;
    gap: 0.5rem;
    justify-content: center;
  }
  .hero .actions a {
    display: inline-block;
    width: 140px;
    margin: 0;
    box-sizing: content-box;
    display: flex;
    justify-content: center;
    align-items: center;
  }
</style>

<StarlightPage frontmatter={{ title: "Superego", template: "splash" }}>
  <div class="step">
    <h2>1. Imagine all your personal data in one private space</h2>
    <div class="details">
      An open-source, local database where you can store anything you want and
      which can connect and sync with your other apps.
      <Image
        alt="Superego data examples"
        src={image0}
        width={CONTAINER_WIDTH * 2}
        format="avif"
        quality={100}
      />
    </div>
  </div>

  <div class="step" id="step-1">
    <h2>2. Add an AI assistant to interact with it</h2>
    <div class="details">
      Use a local model for privacy or connect to your trusted inference
      provider.
      <Image
        alt="Superego assistant helping you interact with the data"
        src={image1}
        width={CONTAINER_WIDTH * 2}
        format="avif"
        quality={100}
      />
    </div>
  </div>

  <div class="step" id="step-2">
    <h2>3. Make it a platform for dashboards and small apps</h2>
    <div class="details">
      They're just simple TypeScript snippets and you can <i>vibe</i> them with the
      assistant!
      <Image
        alt="Superego assistant helping you build dashboards"
        src={image2}
        width={CONTAINER_WIDTH * 2}
        format="avif"
        quality={100}
      />
    </div>
  </div>

  <button id="scroll-down-button">
    <Icon name="down-caret" />
  </button>

  <div class="step hero">
    <div class="hero">
      <div class="copy">
        <Image
          alt="Superego logo: a low-poly drawing of Freud's head"
          src={logo}
          width={CONTAINER_WIDTH / 6}
          height={CONTAINER_WIDTH / 6}
        />

        <h1>Superego</h1>
        <p>Your Life's Database</p>
      </div>
      <div class="actions">
        <LinkButton href="https://demo.superego.dev" icon="rocket">
          Try the demo
        </LinkButton>
        <LinkButton
          href={import.meta.env["PUBLIC_LATEST_RELEASE_URL"]}
          icon="download"
        >
          Get the alpha
        </LinkButton>
      </div>
    </div>
    <h4>Or, watch a short demo:</h4>
    <iframe
      src={import.meta.env["PUBLIC_DEMO_VIDEO_URL"]}
      title="Superego Demo Video"
      style={{
        width: "100%",
        aspectRatio: "720/405",
        border: 0,
        borderRadius: "0.25rem",
      }}
      allow="accelerometer; autoplay; clipboard-write; encrypted-media; gyroscope; picture-in-picture; web-share"
      referrerpolicy="strict-origin-when-cross-origin"
      allowfullscreen></iframe>
  </div>
</StarlightPage>
