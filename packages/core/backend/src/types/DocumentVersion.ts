import type CollectionVersionId from "../ids/CollectionVersionId.js";
import type DocumentVersionId from "../ids/DocumentVersionId.js";
import type NonEmptyArray from "./NonEmptyArray.js";
import type SummaryProperty from "./SummaryProperty.js";

export default interface DocumentVersion<Content = Record<string, unknown>> {
  id: DocumentVersionId;
  collectionVersionId: CollectionVersionId;
  /** Id of the previous version. Null if this is the first version. */
  previousVersionId: DocumentVersionId | null;
  content: Content;
  /**
   * Summary properties are a set of { name, value } pairs derived from the
   * document's content that contain the most important information
   * of a document. They are used for display purposes in various UI contexts;
   * they are also used as document _summaries_ in some LLM interactions.
   *
   * For example, the first summary property - which we can think conceptually
   * as the "name" of the document - is used as breadcrumb in the default
   * document view. In the default collection view, summary properties are used
   * as columns of the documents table.
   *
   * Summary properties are generated by user-defined functions.
   */
  summaryProperties: NonEmptyArray<SummaryProperty>;
  createdAt: Date;
}
