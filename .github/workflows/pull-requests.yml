name: QA and deploy

on: pull_request

jobs:
  qa:
    runs-on: ubuntu-latest
    steps:
      - uses: actions/checkout@v4
      - uses: actions/setup-node@v4
        with:
          node-version: "22"
      - name: Enable corepack
        run: corepack enable
      - name: Install dependencies
        run: yarn install --immutable --check-cache --refresh-lockfile
      - name: Install Playwright
        run: yarn dlx playwright install chromium --with-deps
      - name: Check formatting
        run: yarn check-formatting
      - name: Check types
        run: yarn check-types
      - name: Check linting
        run: yarn check-linting
      - name: Test
        run: yarn test

  build-deploy-demo:
    needs: qa
    runs-on: ubuntu-latest
    permissions:
      contents: read
      pull-requests: write
    steps:
      - uses: actions/checkout@v4
      - uses: actions/setup-node@v4
        with:
          node-version: "22"
      - name: Enable corepack
        run: corepack enable
      - name: Install dependencies
        run: yarn install --immutable --check-cache --refresh-lockfile
      - name: Build
        run: yarn build-demo
      - name: Deploy demo-app preview to *.demosuperegodev.pages.dev
        env:
          CLOUDFLARE_API_TOKEN: ${{secrets.CLOUDFLARE_API_TOKEN}}
          CLOUDFLARE_ACCOUNT_ID: ${{secrets.CLOUDFLARE_ACCOUNT_ID}}
        run: yarn deploy-demo --branch ${{ github.event.number }}
      - uses: mshick/add-pr-comment@v2
        with:
          message-id: ${{ github.event.number }}-demo
          message: |
            Preview available at https://${{ github.event.number }}.demosuperegodev.pages.dev/

  build-deploy-electron:
    needs: qa
    strategy:
      matrix:
        include:
          - os: macos-13
            arch: x64
          - os: macos-latest
            arch: arm64
    runs-on: ${{ matrix.os }}
    permissions:
      contents: write
      pull-requests: write
    steps:
      - uses: actions/checkout@v4
      - uses: actions/setup-node@v4
        with:
          node-version: "22"
      - name: Enable corepack
        run: corepack enable
      - name: Install dependencies
        run: yarn install --immutable --check-cache --refresh-lockfile
      - name: Set electron-app package version
        run: |
          PKG_JSON_PATH="packages/apps/electron-app/package.json"
          PR_NUMBER=$(echo "$GITHUB_REF" | awk -F'/' '{print $3}')
          printf '%s' "$(jq ".version = \"0.0.0-PR-${PR_NUMBER}\"" $PKG_JSON_PATH)" > $PKG_JSON_PATH
      - name: Build
        run: yarn build-electron
      - name: Get OS friendly name
        id: get_os
        run: echo "name=$(echo ${{ matrix.os }} | cut -d'-' -f1)" >> $GITHUB_OUTPUT
      - uses: actions/upload-artifact@v4
        with:
          name: ${{ steps.get_os.outputs.name }}-${{ matrix.arch }}-app
          path: packages/apps/electron-app/out/make/zip/darwin/${{ matrix.arch }}/*.zip
          compression-level: 0
      - uses: mshick/add-pr-comment@v2
        with:
          message-id: ${{ github.event.number }}-electron-${{ steps.get_os.outputs.name }}-${{ matrix.arch }}
          message: |
            Preview app for ${{ steps.get_os.outputs.name }} ${{ matrix.arch }} available at ${{ steps.artifact-upload-step.outputs.artifact-url }}
